<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprSliderBar</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objGUIButton</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///CUSTOMIZEABLE VARIABLES

//Bar dimensions
width = 200;
height = 10;

//Bar sprite
guiSprite = sprSliderBar;

//Slider dimensions
widthSlider = 10;
heightSlider = 24;
//Slider sprite
guiSpriteSlider = sprSlider;


orientation = "HORIZONTAL"; //HORIZONTAL or VERTICAL

//Percentual value of the current cursor
valuePercent = 0;
valueSetOnLoad = -1;
drawValuePercent = ""; //"", TOP, BOTTOM, LEFT, RIGHT
fontType = fntStandard;
fontScale = 1;
fontColor = c_yellow;


depth = 0; //always above panels


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///INTERNAL VARS &amp; SETUP COLISIONS

origin = "TOPLEFT"; // always TOPLEFT
text = "";

alarm[0] = 1; // slider initializer
slider = noone;

gui_setup_collision(origin);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DESTROY THE SLIDER
instance_destroy(slider);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///INITIALIZER

guiSpritePressed = guiSprite;
sprite_index = guiSprite;

if( orientation == "HORIZONTAL" ){
    slider = instance_create(buttonX + (widthSlider div 2), buttonY+(height div 2), objGUIButton);
}else{
    slider = instance_create(buttonX + (width div 2), buttonY+(heightSlider div 2), objGUIButton);
}

slider.origin = "CENTER";
slider.guiSprite = guiSpriteSlider;
slider.guiSpritePressed = guiSpriteSlider;
slider.width = widthSlider;
slider.height = heightSlider;
slider.text = "";
slider.depth = depth-1;
with(slider){ gui_setup_collision(origin); }

visible = true;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///VALUE - SET ON LOAD
if( valueSetOnLoad != -1 ){
    valuePercent = valueSetOnLoad;
    valueSetOnLoad = -1;
        
    if(orientation == "HORIZONTAL" ){
        var realIniX = (slider.width div 2);
        var realEndX = width - (slider.width div 2);
        slider.x = buttonX + (((realEndX-realIniX)*(valuePercent/100))+realIniX);
    }else{
        var realIniY = (slider.height div 2);
        var realEndY = height - (slider.height div 2);
        slider.y = buttonY + (((realEndY-realIniY)*(valuePercent/100))+realIniY);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DRAG SLIDER

if(buttonPressed &amp;&amp; orientation == "HORIZONTAL" ){
    with(slider){
        x = clamp(device_mouse_x_to_gui(0), 
            other.buttonX + (width div 2), 
            other.buttonX + other.width - (width div 2));

        gui_setup_collision(origin);
    }
}else if(buttonPressed &amp;&amp; orientation == "VERTICAL" ){
    with(slider){
        y = clamp(device_mouse_y_to_gui(0), 
            other.buttonY + (height div 2), 
            other.buttonY + other.height - (height div 2));

        gui_setup_collision(origin);
    }
}

if(buttonPressed){
    // Update percent value
    event_perform(ev_other, ev_user1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///UPDATE VALUE PERCENT
if(orientation == "HORIZONTAL" ){
    var relativePosition = slider.buttonX-buttonX;
    var realIniX = (slider.width div 2);
    var realEndX = width - (slider.width div 2);
    
    valuePercent = ((relativePosition-realIniX)*100)/(realEndX-realIniX);
}else{
    var relativePosition = slider.buttonY-buttonY;
    var realIniY = (slider.height div 2);
    var realEndY = height - (slider.height div 2);
    
    valuePercent = ((relativePosition-realIniY)*100)/(realEndY-realIniY);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DRAW VALUE PERCENT
if(drawValuePercent == "TOP" ){
    draw_set_font_ext(fontType, fontColor, fa_center, fa_bottom, 1);
    draw_text_outline(
        buttonX + (width div 2), 
        buttonY - 5, 
        round(valuePercent), -1, 1000, c_black, fontScale);
}else if(drawValuePercent == "BOTTOM" ){
    draw_set_font_ext(fontType, fontColor, fa_center, fa_top, 1);
    draw_text_outline(
        buttonX + (width div 2), 
        buttonY + height + 5, 
        round(valuePercent), -1, 1000, c_black, fontScale);
}else if(drawValuePercent == "LEFT" ){
    draw_set_font_ext(fontType, fontColor, fa_right, fa_middle, 1);
    draw_text_outline(
        buttonX - 5, 
        buttonY + (height div 2),
        round(valuePercent), -1, 1000, c_black, fontScale);
}else if(drawValuePercent == "RIGHT" ){
    draw_set_font_ext(fontType, fontColor, fa_left, fa_middle, 1);
    draw_text_outline(
        buttonX + width + 5, 
        buttonY + (height div 2),
        round(valuePercent), -1, 1000, c_black, fontScale);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
