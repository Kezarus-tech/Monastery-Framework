<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprButton</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objGUIPanel</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///CUSTOMIZEABLE VARIABLES

width = 200;
height = 50;
text = "Button Text"; //displayed text
icon = -1; //sprite index

enabled = true;
stayPressed = false;
toggled = false;

guiSprite = sprButton;
guiSpritePressed = sprButtonPressed;
depth = 0; //always above panels

origin = GUI_TOPLEFT; // GUI_TOPLEFT or GUI_CENTER

fontType = fntStandard;
fontScale = 1;
fontColor = c_yellow;
fontAlign = fa_center; //fa_center, fa_left

pressedOffset = 2;

soundClick = sndClick;

targetScript = noone;
targetScriptArgs[0] = noone;


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///INTERNAL VARS
buttonPressed = false;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///HOVER AND CLICK

if( enabled ){
    if( !mouseOver ){
        if( !stayPressed &amp;&amp; !toggled ){
            buttonPressed = false;
        }
    }else{
        if( mouse_check_button_pressed(mb_left) ){
            if( toggled ){
                buttonPressed = !buttonPressed;
            }else if( stayPressed ){
                if(!buttonPressed){
                    buttonPressed = true;
                    event_perform(ev_other, ev_user0); // execute command
                }
            }else{
                buttonPressed = true;
            }
        }else 
        if( mouse_check_button_released(mb_left) &amp;&amp; buttonPressed ){
            if( toggled ){
                event_perform(ev_other, ev_user0); // execute command
            }else if( stayPressed ){
                //DO NOTHING
            }else{
                buttonPressed = false;
                event_perform(ev_other, ev_user0); // execute command
            }
        }
    }
}else{
    image_blend = c_gray;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///SPRITE

if(!buttonPressed){
    sprite_index = guiSprite;
}else{
    sprite_index = guiSpritePressed;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///--PUT YOUR COMMANDS ON THIS EVENT--

/* 
put them on your inherited buttons and 
call this parent event with event_inherited();
to get the sounds and other behaviors
*/

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///SOUND
var snd = audio_play_sound(soundClick, 10, false);
audio_sound_pitch(snd, random_range(0.9, 1.1));
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///EXECUTE SCRIPT
if( targetScript != noone ){
    var argsSize = array_length_1d(targetScriptArgs);
    
    if( argsSize == 0 ){
        script_execute(targetScript);
    }else if( argsSize == 1 ){
        script_execute(targetScript, targetScriptArgs[0]);
    }else if( argsSize == 2 ){
        script_execute(targetScript, targetScriptArgs[0], targetScriptArgs[1]);
    }else if( argsSize == 3 ){
        script_execute(targetScript, targetScriptArgs[0], targetScriptArgs[1], targetScriptArgs[2]);
    }else if( argsSize == 4 ){
        script_execute(targetScript, targetScriptArgs[0], targetScriptArgs[1], targetScriptArgs[2], targetScriptArgs[3]);
    }else if( argsSize == 5 ){
        script_execute(targetScript, targetScriptArgs[0], targetScriptArgs[1], targetScriptArgs[2], targetScriptArgs[3], targetScriptArgs[4]);
    }else if( argsSize &gt;= 6 ){
        script_execute(targetScript, targetScriptArgs[0], targetScriptArgs[1], targetScriptArgs[2], targetScriptArgs[3], targetScriptArgs[4], targetScriptArgs[5]);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DRAW ICON
if( icon != -1 ){
    if( buttonPressed ){
        draw_sprite_ext(icon, 0, buttonX, buttonY, 1, 1, 0, image_blend, image_alpha);
    }else{
        draw_sprite_ext(icon, 0, buttonX, buttonY-pressedOffset, 1, 1, 0, image_blend, image_alpha);
    }
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DRAW TEXT
if( text != "" ){
    draw_set_font_ext(fontType, fontColor, fontAlign, fa_middle, 1);
    
    var textX = 0;
    var textY = 0;
    
    if(origin == "CENTER"){
        textX = buttonX;
        textY = buttonY;
    }else{
        if( fontAlign == fa_center ){
            textX = buttonX + (width div 2);
            textY = buttonY + (height div 2);
        }else if( fontAlign == fa_left ){
            textX = buttonX + 5;
            textY = buttonY + (height div 2);
        }
    }
    
    if( buttonPressed ){
        draw_text_outline( textX, textY+pressedOffset, text, -1, 1000, c_black, fontScale );
    }else{
        draw_text_outline( textX, textY, text, -1, 1000, c_black, fontScale );
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
